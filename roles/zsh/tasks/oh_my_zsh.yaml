- name: Zsh | Install requirements of "Oh my zsh"
  ansible.builtin.apt:
    name:
      - curl
      - git
    state: present
    update_cache: true
  become: true

- name: Zsh | Check if "Oh my zsh" is already installed
  stat:
    path: ~/.oh-my-zsh
  register: oh_my_zsh

- name: Zsh | Install "Oh my zsh"
  ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh) --skip-chsh"
  when: not oh_my_zsh.stat.exists

- name: Zsh | Install "Oh my zsh" plugins from git
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{% if zsh_custom is defined %}{{ zsh_custom }}/{{ item.name }}{% else %}{{ zsh_path }}/custom/plugins/{{ item.name }}{% endif %}"
  with_items: "{{ zsh_git_plugins }}"

- name: Zsh | Create .zshrc file
  ansible.builtin.template:
    src: .zshrc.j2
    dest: ~/.zshrc
    mode: '0644'

- name: Zsh | Change default shell to zsh for "{{ ansible_user }}"
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    shell: /usr/bin/zsh
  when: ansible_user is defined

- name: Zsh | Change default shell to Zsh for $USER
  ansible.builtin.user:
    name: "{{ ansible_env.USER }}"
    shell: /usr/bin/zsh
  when:
    - "'USER' in ansible_env"
    - ansible_user is not defined

- name: Zsh | Change default shell to zsh for root
  ansible.builtin.user:
    name: "root"
    shell: /usr/bin/zsh
  when:
    - "'USER' not in ansible_env"
    - ansible_user is not defined
